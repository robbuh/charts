apiVersion: {{ template "plone.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "plone.fullname" . }}
  labels: {{- include "plone.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels: {{- include "plone.matchLabels" . | nindent 6 }}
  {{- if .Values.updateStrategy }}
  strategy: {{ toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels: {{- include "plone.labels" . | nindent 8 }}
    spec:
      {{- if .Values.schedulerName }}
      schedulerName: {{ .Values.schedulerName | quote }}
      {{- end }}
      hostAliases:
        - ip: "127.0.0.1"
          hostnames:
            - "status.localhost"
      {{- if .Values.affinity }}
      affinity: {{- include "plone.tplValue" (dict "value" .Values.affinity "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- include "plone.tplValue" (dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- include "plone.tplValue" (dict "value" .Values.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.securityContext.enabled }}
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
        fsGroup: {{ .Values.securityContext.fsGroup }}
      {{- end }}
      containers:
        - name: plone
          image: {{ template "plone.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          env:
            - name: SITE
              value: {{ .Values.ploneSite | quote }}
            - name: TZ
              value: {{ .Values.ploneTZ | quote }}
          ports:
            - name: http
              containerPort: 8080
          resources: {}
      restartPolicy: Always
status: {}
